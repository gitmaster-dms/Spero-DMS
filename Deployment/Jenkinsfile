pipeline {
    agent any

    options {
        skipDefaultCheckout(true)
    }

    environment {
        GIT_REPO_URL = 'https://github.com/gitmaster-dms/Spero-DMS.git'
        GIT_BRANCH = 'main'
        TARGET_DIR = '/var/www/html/Aggregation_test_project/DMS_goa_test'
    }

    stages {
        stage('Clone or Reset Repository') {
            steps {
                script {
                    if (!fileExists("${TARGET_DIR}/.git")) {
                        echo "Cloning repository to $TARGET_DIR..."
                        sh "git clone -b ${GIT_BRANCH} ${GIT_REPO_URL} ${TARGET_DIR}"
                    } else {
                        echo "Repository already exists. Resetting and pulling latest changes..."
                        dir(TARGET_DIR) {
         
                            sh "git config --global --add safe.directory ${TARGET_DIR}"
                   
                            sh '''
                                git fetch origin ${GIT_BRANCH}
                                git reset --hard origin/${GIT_BRANCH}
                                git clean -fd
                            '''
                        }
                    }
                }
            }
        }

        stage('Check Files') {
            steps {
                sh "ls -al ${TARGET_DIR}"
            }
        }

        stage('Setup Python Virtual ENV for dependencies') {
            steps {
                sh '''
                    echo "Checking current workspace directory"
                    echo $PWD
                    chmod +x ${TARGET_DIR}/Deployment/envsetup.sh
                    ${TARGET_DIR}/Deployment/envsetup.sh
                '''
            }
        }

        stage('Setup Gunicorn') {
            steps {
                sh '''
                    chmod +x ${TARGET_DIR}/Deployment/gunicorn.sh
                    ${TARGET_DIR}/Deployment/gunicorn.sh
                '''
            }
        }

        stage('Setup NGINX') {
            steps {
                sh '''
                    chmod +x ${TARGET_DIR}/Deployment/nginx.sh
                    ${TARGET_DIR}/Deployment/nginx.sh
                '''
            }
        }
    }

    post {
        success {
            echo 'Build was successful!'
        }
        failure {
            echo 'Build failed. Please check the logs.'
        }
    }
}
